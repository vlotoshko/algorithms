//--------------------------------------------------------------------------------------------------
// Author: Volodymyr Lotoshko (vlotoshko@gmail.com)
// skype:  vlotoshko
// Date:   09-May-2018
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
#ifndef ISORTABLE_HPP
#define ISORTABLE_HPP
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
#include <vector>
#include <functional>
//--------------------------------------------------------------------------------------------------

namespace sort
{

// ------------------------------------------------------------------------------------------
// Interface for the all sort algorithms
//
template<typename T>
class ISortable
{
public:
    virtual              ~ISortable()                    = default;
    virtual void         sort(std::vector<T> & elements) = 0;
    virtual std::string  name() const                    = 0;
protected:
    bool less(const T & a, const T & b)
    {
        return std::less<T>()(a, b);
    }
};


} // namespace sort

//--------------------------------------------------------------------------------------------------
#endif // ISORTABLE_HPP
//--------------------------------------------------------------------------------------------------
